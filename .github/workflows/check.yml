name: Checks

on:
  push:
  pull_request:
  schedule:
  - cron: "0 0 1 * *"

jobs:
  testJob:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - id: set_var
        run: |
          content=`cat ./0001_eoghanoconnell_180321.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
      - run: |
          echo "${{fromJson(steps.set_var.outputs.packageJson).version}}"

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.7', '3.8']
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        # prerequisites
        python -m pip install --upgrade pip wheel
        python -m pip install codecov coverage flake8 pytest pytest-benchmark
        # install dependencies
        pip install -e .[all]
        # show installed packages
        pip freeze
    - name: Test with pytest
      run: |
        coverage run -m --source=shapelink pytest --ignore=tests/benchmarking_tests
    - name: Run Benchmark with pytest-benchmark
      run: |
        pytest tests/benchmarking_tests/test_basic_plugin.py --benchmark-compare="Windows-CPython-3.8-64bit/0001_eoghanoconnell_180321"
    - name: Lint with flake8
      run: |
        flake8 .
    - name: Submit code coverage
      run: |
        coverage report -m
        codecov
